//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ConsoleClient.OrderService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Item", Namespace="http://schemas.datacontract.org/2004/07/Lab4")]
    [System.SerializableAttribute()]
    public partial struct Item : System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string QuantityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TotalCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UnitPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConsoleClient.OrderService.CustomerOptions customeroptionsField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartNo {
            get {
                return this.PartNoField;
            }
            set {
                if ((object.ReferenceEquals(this.PartNoField, value) != true)) {
                    this.PartNoField = value;
                    this.RaisePropertyChanged("PartNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Quantity {
            get {
                return this.QuantityField;
            }
            set {
                if ((object.ReferenceEquals(this.QuantityField, value) != true)) {
                    this.QuantityField = value;
                    this.RaisePropertyChanged("Quantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TotalCost {
            get {
                return this.TotalCostField;
            }
            set {
                if ((object.ReferenceEquals(this.TotalCostField, value) != true)) {
                    this.TotalCostField = value;
                    this.RaisePropertyChanged("TotalCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UnitPrice {
            get {
                return this.UnitPriceField;
            }
            set {
                if ((object.ReferenceEquals(this.UnitPriceField, value) != true)) {
                    this.UnitPriceField = value;
                    this.RaisePropertyChanged("UnitPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConsoleClient.OrderService.CustomerOptions customeroptions {
            get {
                return this.customeroptionsField;
            }
            set {
                if ((this.customeroptionsField.Equals(value) != true)) {
                    this.customeroptionsField = value;
                    this.RaisePropertyChanged("customeroptions");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CustomerOptions", Namespace="http://schemas.datacontract.org/2004/07/Lab4")]
    [System.SerializableAttribute()]
    public partial struct CustomerOptions : System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ColorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SizeField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Color {
            get {
                return this.ColorField;
            }
            set {
                if ((object.ReferenceEquals(this.ColorField, value) != true)) {
                    this.ColorField = value;
                    this.RaisePropertyChanged("Color");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Size {
            get {
                return this.SizeField;
            }
            set {
                if ((object.ReferenceEquals(this.SizeField, value) != true)) {
                    this.SizeField = value;
                    this.RaisePropertyChanged("Size");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BillingInformation", Namespace="http://schemas.datacontract.org/2004/07/Lab4")]
    [System.SerializableAttribute()]
    public partial struct BillingInformation : System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ZipCodeField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ZipCode {
            get {
                return this.ZipCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ZipCodeField, value) != true)) {
                    this.ZipCodeField = value;
                    this.RaisePropertyChanged("ZipCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="OrderService.IOrderService")]
    public interface IOrderService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/GetNumberOfOrders", ReplyAction="http://tempuri.org/IOrderService/GetNumberOfOrdersResponse")]
        string GetNumberOfOrders();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/GetNumberOfOrders", ReplyAction="http://tempuri.org/IOrderService/GetNumberOfOrdersResponse")]
        System.Threading.Tasks.Task<string> GetNumberOfOrdersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/GetTotalCostForAnOrder", ReplyAction="http://tempuri.org/IOrderService/GetTotalCostForAnOrderResponse")]
        string GetTotalCostForAnOrder();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/GetTotalCostForAnOrder", ReplyAction="http://tempuri.org/IOrderService/GetTotalCostForAnOrderResponse")]
        System.Threading.Tasks.Task<string> GetTotalCostForAnOrderAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/GetItemListForOrder", ReplyAction="http://tempuri.org/IOrderService/GetItemListForOrderResponse")]
        ConsoleClient.OrderService.Item[] GetItemListForOrder();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/GetItemListForOrder", ReplyAction="http://tempuri.org/IOrderService/GetItemListForOrderResponse")]
        System.Threading.Tasks.Task<ConsoleClient.OrderService.Item[]> GetItemListForOrderAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/HowManyOrderedForAPartNum", ReplyAction="http://tempuri.org/IOrderService/HowManyOrderedForAPartNumResponse")]
        string HowManyOrderedForAPartNum();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/HowManyOrderedForAPartNum", ReplyAction="http://tempuri.org/IOrderService/HowManyOrderedForAPartNumResponse")]
        System.Threading.Tasks.Task<string> HowManyOrderedForAPartNumAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/GetBillingAddressForAnOrder", ReplyAction="http://tempuri.org/IOrderService/GetBillingAddressForAnOrderResponse")]
        ConsoleClient.OrderService.BillingInformation[] GetBillingAddressForAnOrder();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/GetBillingAddressForAnOrder", ReplyAction="http://tempuri.org/IOrderService/GetBillingAddressForAnOrderResponse")]
        System.Threading.Tasks.Task<ConsoleClient.OrderService.BillingInformation[]> GetBillingAddressForAnOrderAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IOrderServiceChannel : ConsoleClient.OrderService.IOrderService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class OrderServiceClient : System.ServiceModel.ClientBase<ConsoleClient.OrderService.IOrderService>, ConsoleClient.OrderService.IOrderService {
        
        public OrderServiceClient() {
        }
        
        public OrderServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public OrderServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public OrderServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public OrderServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetNumberOfOrders() {
            return base.Channel.GetNumberOfOrders();
        }
        
        public System.Threading.Tasks.Task<string> GetNumberOfOrdersAsync() {
            return base.Channel.GetNumberOfOrdersAsync();
        }
        
        public string GetTotalCostForAnOrder() {
            return base.Channel.GetTotalCostForAnOrder();
        }
        
        public System.Threading.Tasks.Task<string> GetTotalCostForAnOrderAsync() {
            return base.Channel.GetTotalCostForAnOrderAsync();
        }
        
        public ConsoleClient.OrderService.Item[] GetItemListForOrder() {
            return base.Channel.GetItemListForOrder();
        }
        
        public System.Threading.Tasks.Task<ConsoleClient.OrderService.Item[]> GetItemListForOrderAsync() {
            return base.Channel.GetItemListForOrderAsync();
        }
        
        public string HowManyOrderedForAPartNum() {
            return base.Channel.HowManyOrderedForAPartNum();
        }
        
        public System.Threading.Tasks.Task<string> HowManyOrderedForAPartNumAsync() {
            return base.Channel.HowManyOrderedForAPartNumAsync();
        }
        
        public ConsoleClient.OrderService.BillingInformation[] GetBillingAddressForAnOrder() {
            return base.Channel.GetBillingAddressForAnOrder();
        }
        
        public System.Threading.Tasks.Task<ConsoleClient.OrderService.BillingInformation[]> GetBillingAddressForAnOrderAsync() {
            return base.Channel.GetBillingAddressForAnOrderAsync();
        }

        internal BillingInformation[] GetBillingAddressForAnOrder(int v)
        {
            throw new NotImplementedException();
        }

        internal Item[] GetItemListForOrder(int v)
        {
            throw new NotImplementedException();
        }
    }
}
